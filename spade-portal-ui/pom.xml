<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cisco.spadeportal</groupId>
  <artifactId>spade</artifactId>
  <packaging>war</packaging>
  <version>portal</version>
  <name>spade Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
     <finalName>spade-portal</finalName>
    <!-- Added -->
    
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.0.0</version>
        <!-- <configuration>
          <warSourceDirectory>WebContent</warSourceDirectory>
        </configuration> -->
      </plugin>
      <!-- Extra Plugins -->
      <!-- Plugin to execute command  "npm install" and "npm run build" inside /angular directory -->
	    <plugin>
	      <groupId>com.github.eirslett</groupId>
	      <artifactId>frontend-maven-plugin</artifactId>
	      <version>1.3</version>
	      <configuration>
	        <workingDirectory>spade-portal</workingDirectory>
	        <installDirectory>temp</installDirectory>
	      </configuration>
	      <executions>
	        <!-- It will install nodejs and npm -->
	        <execution>
	          <id>install node and npm</id>
	          <goals>
	            <goal>install-node-and-npm</goal>
	          </goals>
	          <configuration>
	            <nodeVersion>v7.7.2</nodeVersion>
	            <npmVersion>4.3.0</npmVersion>
	          </configuration>
	        </execution>
	
	        <!-- It will execute command "npm install" inside "/angular" directory -->
	        <execution>
	          <id>npm install</id>
	          <goals>
	            <goal>npm</goal>
	          </goals>
	          <configuration>
	            <arguments>install</arguments>
	          </configuration>
	        </execution>
	        
	        <!-- This will install bootstrap modules in the node_modules folder -->
			<execution>
	          <id>npm install bootstrap</id>
	          <goals>
	            <goal>npm</goal>
	          </goals>
	          <configuration>
	            <arguments>install bootstrap@4.0.0-alpha.5</arguments>
	          </configuration>
	        </execution>

			  <!-- This includes angular-highcharts module -->
			  <execution>
				  <id>npm install highcharts</id>
				  <goals>
					  <goal>npm</goal>
				  </goals>
				  <configuration>
					  <arguments>install angular2-highcharts --save</arguments>
				  </configuration>
			  </execution>

	        <!-- This includes material2 -->
	        <!--<execution>
	          <id>npm install material</id>
	          <goals>
	            <goal>npm</goal>
	          </goals>
	          <configuration>
	            <arguments>install &#45;&#45;save @angular/material</arguments>
	          </configuration>
	        </execution>-->
	        
	        <!-- It will execute command "npm build" inside "/angular" directory to clean and create "/dist" directory-->
	        <execution>
	          <id>npm build</id>
	          <goals>
	            <goal>npm</goal>
	          </goals>
	          <configuration>
	            <arguments>run build</arguments>
	          </configuration>
	        </execution>
	      </executions>
	    </plugin>
	
	    <!-- Plugin to copy the content of /angular/dist/ directory to output directory (ie/ /target/transactionManager-1.0/) -->
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-resources-plugin</artifactId>
	      <version>3.0.1</version>
	      <executions>
	        <execution>
	          <id>default-copy-resources</id>
	          <phase>process-resources</phase>
	          <goals>
	            <goal>copy-resources</goal>
	          </goals>
	          <configuration>
	            <overwrite>true</overwrite>
	            <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/</outputDirectory>
	            <resources>
	              <resource>
	                <directory>${project.basedir}/spade-portal/dist</directory>
	              </resource>
	            </resources>
	          </configuration>
	        </execution>
	      </executions>
	    </plugin>
      <!--  -->
    </plugins>
    
    <!--  -->
  </build>
</project>
